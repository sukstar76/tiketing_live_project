version: '2'
services:
  redis:
    build:
      context: ./
      dockerfile: ./redis.Dockerfile
    ports:
      - '6380:6380'
    networks:
      - our
  # zookeeper:
  #   image: wurstmeister/zookeeper
  #   ports:
  #     - '2181:2181'
  #   networks:
  #     - our
  # kafka:
  #   image: wurstmeister/kafka
  #   ports:
  #     - '9093:9093'
  #   environment:
  #     KAFKA_ADVERTISED_HOST_NAME: kafka
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_LISTENERS: INTERNAL://kafka:9092, EXTERNAL://kafka:9093
  #     KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092, EXTERNAL://127.0.0.1:9093
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT, EXTERNAL:PLAINTEXT
  #     KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
  #   networks:
  #     - our
  # api_server:
  #   build:
  #     context: ../tiketing_api_server
  #     dockerfile: ./Dockerfile
  #   ports:
  #     - '8080:8080'
  #   networks:
  #     - our
  #   depends_on:
  #     - redis
  #     - zookeeper
  #     - kafka
  live_server:
    build:
      context: ../tiketing_live_server_golang
      dockerfile: ./Dockerfile
    ports:
      - '7070:7070'
    networks:
      - our
    depends_on:
      - redis
  #     - zookeeper
  #     - kafka
  # live_server:
  #   build:
  #     context: ../tiketing_live_server
  #     dockerfile: ./Dockerfile
  #   ports:
  #     - '5000:5000'
  #   networks:
  #     - our
  #   depends_on:
  #     - redis
      # - zookeeper
      # - kafka
  # message_broker_app:
  #   build:
  #     context: ../message_broker_app
  #     dockerfile: ./Dockerfile
  #   networks:
  #     - our
  #   depends_on:
  #     - redis
  #     - zookeeper
  #     - kafka
networks:
  our:
    driver: bridge
